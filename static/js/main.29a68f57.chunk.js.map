{"version":3,"sources":["components/App.jsx","actions/index.js","constants.js","reducers/index.js","index.js"],"names":["App","props","state","text","dueDate","console","log","this","addReminder","id","deleteReminder","reminders","className","map","reminder","key","moment","Date","fromNow","onClick","placeholder","onChange","event","setState","target","value","type","renderReminders","clearReminders","Component","connect","action","Math","random","removeById","filter","read_cookie","bake_cookie","store","createStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"uRAMMA,G,wDACJ,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAO,CACVC,KAAK,GACLC,QAAS,IAJK,E,0DAUhBC,QAAQC,IAAI,qBAAqBC,KAAKL,MAAME,SAC5CG,KAAKN,MAAMO,YAAYD,KAAKL,MAAMC,KAAKI,KAAKL,MAAME,W,qCAGrCK,GAGbF,KAAKN,MAAMS,eAAeD,K,wCAIV,IAAD,OACTE,EAAYJ,KAAKN,MAAjBU,UAER,OACE,wBAAIC,UAAU,uBAETD,EAAUE,KAAI,SAAAC,GACZ,OACE,wBAAIC,IAAKD,EAASL,GAAIG,UAAU,mBAC9B,yBAAKA,UAAU,aACZ,6BAAME,EAASX,KAAf,KACA,6BAAK,4BAAKa,IAAQ,IAAIC,KAAKH,EAASV,UAAUc,aAEhD,yBACEN,UAAU,0BACVO,QAAS,kBAAM,EAAKT,eAAeI,EAASL,MAF9C,iB,+BAeL,IAAD,OAEJ,OACI,yBAAKG,UAAU,OACX,yBAAKA,UAAU,SAAf,gBAGA,yBAAKA,UAAU,6BACX,yBAAKA,UAAU,cACZ,2BACEA,UAAU,eACVQ,YAAY,eACZC,SAAU,SAAAC,GAAK,OAAI,EAAKC,SAAS,CAACpB,KAAOmB,EAAME,OAAOC,WAExD,2BACEb,UAAU,eACVc,KAAK,iBACLL,SAAU,SAAAC,GAAK,OAAI,EAAKC,SAAS,CAACnB,QAASkB,EAAME,OAAOC,YAG7D,4BACEC,KAAK,SACLd,UAAU,kBACVO,QAAS,kBAAM,EAAKX,gBAHtB,iBAQFD,KAAKoB,kBACP,yBACGf,UAAU,iBACVO,QAAS,kBAAM,EAAKlB,MAAM2B,mBAF7B,kB,GA/EIC,cAqGHC,mBAPf,SAAyB5B,GAEtB,MAAM,CACJS,UAAWT,KAIyB,CAACM,YCzGf,SAACL,EAAOC,GAC/B,IAAM2B,EAAS,CACXL,KCJoB,eDKpBvB,OACAC,WAGJ,OADAC,QAAQC,IAAI,wBAAwByB,GAC7BA,GDkG8CrB,eChG1B,SAACD,GAC7B,IAAMsB,EAAQ,CACVL,KCZuB,kBDavBjB,MAGJ,OADAJ,QAAQC,IAAI,qBAAqByB,GAC1BA,GD0FgEH,eCxF5C,WAC5B,MAAO,CACLF,KCnB0B,qBFyGfI,CAA8E9B,G,sBGxGvFc,EAAW,SAACiB,GAAW,IACpB5B,EAAkB4B,EAAlB5B,KAAOC,EAAW2B,EAAX3B,QACZ,MAAM,CACFK,GAAIuB,KAAKC,SACT9B,OACAC,YAKF8B,EAAa,WAAsB,IAArBhC,EAAoB,uDAAZ,GAAIO,EAAQ,uCAC/BE,EAAYT,EAAMiC,QAAO,SAAArB,GAAQ,OAAIA,EAASL,KAAOA,KAE3D,OADAJ,QAAQC,IAAI,uBAAuBK,GAC5BA,GAwBKA,EArBG,WAAyB,IAAxBT,EAAuB,uDAAf,GAAK6B,EAAU,uCAClCpB,EAAY,KAEhB,OADAT,EAAQkC,sBAAY,aACbL,EAAOL,MACV,IDvBoB,eC2BhB,OAHAf,EAAS,sBAAOT,GAAP,CAAeY,EAASiB,KACjC1B,QAAQC,IAAI,oBAAoBK,GAChC0B,sBAAY,YAAa1B,GAClBA,EACX,ID3BsB,kBC8BlB,OAFAA,EAAYuB,EAAWhC,EAAQ6B,EAAOtB,IACtC4B,sBAAY,YAAa1B,GAClBA,EACX,ID9BsB,kBCiClB,OAFAA,EAAY,GACZ0B,sBAAY,YAAY1B,GACjBA,EACf,QACI,OAAOT,IC7BToC,G,MAAQC,YAAYC,IAE1BC,IAASC,OACL,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEFK,SAASC,eAAe,W","file":"static/js/main.29a68f57.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addReminder , deleteReminder , clearReminders} from '../actions';\r\nimport moment from 'moment';\r\nimport '../App.css';\r\n\r\nclass App extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      text:'',\r\n      dueDate: ''\r\n    }\r\n  }\r\n\r\n  addReminder(){\r\n    // console.log('this',this);\r\n    console.log('this.state.dueDate',this.state.dueDate);\r\n    this.props.addReminder(this.state.text,this.state.dueDate);\r\n  }\r\n\r\n  deleteReminder(id){\r\n    // console.log('deleting in application',id);\r\n    // console.log('this.props',this.props);\r\n    this.props.deleteReminder(id);\r\n  }\r\n\r\n\r\n  renderReminders(){\r\n   const {reminders} =this.props;\r\n  //  console.log('reminders',reminders);\r\n  return(\r\n    <ul className=\"list group col-sm-4\">\r\n       {\r\n         reminders.map(reminder =>{\r\n           return(\r\n             <li key={reminder.id} className=\"list-group-item\">\r\n               <div className=\"list-item\">\r\n                  <div>{reminder.text} </div>\r\n                  <div><em>{moment (new Date(reminder.dueDate)).fromNow()}</em></div>\r\n                </div>  \r\n                <div \r\n                  className=\"list-item delete-button\"\r\n                  onClick={() => this.deleteReminder(reminder.id)}\r\n                >\r\n                    &#x2715; \r\n                </div>             \r\n             </li>\r\n           )\r\n         })\r\n       }\r\n    </ul>\r\n  )\r\n  }\r\n\r\n\r\n  render(){\r\n    // console.log('this.props',this.props);\r\n      return(\r\n          <div className=\"App\">\r\n              <div className=\"title\">\r\n                Reminder Pro\r\n              </div>\r\n              <div className=\"form-inline reminder-form\">\r\n                  <div className=\"form-group\">\r\n                     <input \r\n                       className=\"form-control\"\r\n                       placeholder=\"I have to...\"\r\n                       onChange={event => this.setState({text : event.target.value})}\r\n                     />\r\n                     <input \r\n                       className=\"form-control\"\r\n                       type=\"datetime-local\"\r\n                       onChange={event => this.setState({dueDate: event.target.value})}\r\n                     />\r\n                  </div>\r\n                  <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-success\"\r\n                    onClick={() => this.addReminder()}\r\n                  >\r\n                   Add Reminder\r\n                  </button>\r\n              </div>\r\n              { this.renderReminders() }\r\n              <div \r\n                 className=\"btn btn-danger\" \r\n                 onClick={() => this.props.clearReminders()}\r\n              >\r\n                 Clear All\r\n              </div>\r\n          </div>\r\n      )\r\n  }\r\n}\r\n\r\n\r\n// function mapDispatchToProps(dispatch){\r\n//   return bindActionCreators({addReminder}, dispatch);\r\n// }\r\nfunction mapStateToProps(state){\r\n  //  console.log('state',state);\r\n   return{\r\n     reminders: state\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps , {addReminder ,  deleteReminder , clearReminders })( App);","import {ADD_REMINDER , DELETE_REMINDER , CLEAR_REMINDERS} from '../constants';\r\n\r\nexport const addReminder = (text , dueDate) =>{\r\n    const action = {\r\n        type : ADD_REMINDER,\r\n        text,\r\n        dueDate\r\n    }\r\n    console.log('action is addReminder',action);\r\n    return action;\r\n}\r\nexport const  deleteReminder = (id) =>{\r\n   const action ={\r\n       type : DELETE_REMINDER ,\r\n       id\r\n   }\r\n   console.log('deleting in action',action);\r\n   return action;\r\n}\r\nexport const clearReminders = () =>{\r\n  return {\r\n    type : CLEAR_REMINDERS\r\n  }\r\n}","export const ADD_REMINDER = \"ADD_REMINDER\";\r\nexport const DELETE_REMINDER =\"DELETE_REMINDER\";\r\nexport const CLEAR_REMINDERS =\"CLEAR_REMINDERS\";","import {ADD_REMINDER , DELETE_REMINDER , CLEAR_REMINDERS} from '../constants';\r\nimport {bake_cookie , read_cookie} from 'sfcookies';\r\n\r\nconst reminder = (action) =>{\r\n    let {text , dueDate} = action;\r\n    return{\r\n        id: Math.random(),\r\n        text,\r\n        dueDate\r\n    }\r\n}\r\n\r\n\r\nconst removeById = (state = [], id ) => {\r\n   const reminders = state.filter(reminder => reminder.id !== id);\r\n   console.log('new reduced reminder',reminders);\r\n   return reminders;\r\n}\r\n\r\nconst reminders = (state = [] , action) =>{\r\n    let reminders = null;\r\n    state = read_cookie('reminders');\r\n    switch(action.type){\r\n        case ADD_REMINDER:\r\n            reminders = [...state , reminder(action)];\r\n            console.log('reminder as state',reminders);\r\n            bake_cookie('reminders' ,reminders);\r\n            return reminders;\r\n        case DELETE_REMINDER :\r\n            reminders = removeById(state , action.id);\r\n            bake_cookie('reminders' ,reminders);\r\n            return reminders;\r\n        case CLEAR_REMINDERS :\r\n            reminders = [];\r\n            bake_cookie('reminders',reminders);\r\n            return reminders;\r\n    default:\r\n        return state;\r\n    }\r\n}\r\nexport default reminders;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore} from 'redux';\r\nimport reducer from './reducers';\r\nimport './index.css';\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}